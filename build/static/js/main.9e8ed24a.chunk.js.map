{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux/Aux.js","components/UI/Backdrop/Backdrop.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","hoc/axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","backdrop","show","className","classes","Backdrop","onClick","clicked","logo","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawertoggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","withRouter","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","orderSummary","burger","Spinner","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","elementType","InputElement","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","isValid","street","zipcode","minLength","maxLength","country","email","deliveryMethod","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","err","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","valid","checkValidity","rules","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","CheckoutCancelledHandler","goBack","CheckoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","quantity","ingredientOutput","ig","display","border","padding","Order","orders","fetchedOrders","App","component","Orders","BurgerBuilder","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e8ed24a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load1\":\"Spinner_load1__1BXDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = (props) => props.children;\nexport default aux;\n","import React from \"react\";\n\nimport classes from \"./Backdrop.module.css\";\n\nconst backdrop = (props) =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\n  ) : null;\n\nexport default backdrop;\n","import React from \"react\";\nimport classes from \"./Logo.module.css\";\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\nconst logo = (props) => (\n  <div className={classes.Logo} style={{ height: props.height }}>\n    <img src={burgerLogo} alt=\"MyBurger\" />\n  </div>\n);\nexport default logo;\n","import React from \"react\";\nimport classes from \"./NavigationItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst navigationItem = (props) => (\n  <li className={classes.NavigationItem}>\n    <NavLink\n      to={props.link}\n      exact={props.exact}\n      activeClassName={classes.active}\n    >\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default navigationItem;\n","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst navigationItems = () => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\" exact>\n      Burger Builder\n    </NavigationItem>\n    <NavigationItem link=\"/orders\">Orders</NavigationItem>\n  </ul>\n);\n\nexport default navigationItems;\n","import React from \"react\";\nimport classes from \"./DrawerToggle.module.css\";\nconst drawertoggle = (props) => (\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\nexport default drawertoggle;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport classes from \"./Toolbar.module.css\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\nconst toolbar = (props) => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems />\n    </nav>\n  </header>\n);\nexport default toolbar;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Aux from \"../../../hoc/Aux/Aux\";\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close];\n  if (props.open) {\n    attachedClasses = [classes.SideDrawer, classes.Open];\n  }\n  return (\n    <Aux>\n      <Backdrop show={props.open} clicked={props.closed} />\n      <div className={attachedClasses.join(\" \")}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </Aux>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from \"react\";\nimport Aux from \"../Aux/Aux\";\nimport classes from \"./Layout.module.css\";\nimport backdrop from \"../../components/UI/Backdrop/Backdrop\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false,\n  };\n  sideDrawerClosedHandler = () => {\n    this.setState({ showSideDrawer: false });\n  };\n  sideDrawerToggleHandler = () => {\n    this.setState((prevState) => {\n      return { showSideDrawer: !prevState.showSideDrawer };\n    });\n  };\n  render() {\n    return (\n      <Aux>\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n        />\n        <main className={classes.Content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\nexport default Layout;\n","import React, { Component } from \"react\";\nimport classes from \"./BurgerIngredient.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n\n      default:\n        ingredient = null;\n    }\n    return ingredient;\n  }\n}\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired,\n};\nexport default BurgerIngredient;\n","import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\nimport { withRouter } from \"react-router-dom\";\n\nconst burger = (props) => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map((igKey) => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>;\n  }\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default withRouter(burger);\n","//import buildcontrols from \"../BuildControls\";\n\nimport React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst buildControl = (props) => (\n  <div className={classes.BuildControl}>\n    <div className={classes.Label}>{props.label}</div>\n\n    <button\n      className={classes.Less}\n      onClick={props.removed}\n      disabled={props.disabled}\n    >\n      Remove\n    </button>\n    <button className={classes.More} onClick={props.added}>\n      Add\n    </button>\n  </div>\n);\nexport default buildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"../BuildControls/BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Salad Rs.5\", type: \"salad\" },\n  { label: \"Bacon Rs.10\", type: \"bacon\" },\n  { label: \"Cheese Rs.10\", type: \"cheese\" },\n  { label: \"Meat Rs.20\", type: \"meat\" },\n];\n\nconst buildControls = (props) => (\n  <div className={classes.BuildControls}>\n    <p>\n      Current Price Rs. <strong>{props.price.toFixed(2)}</strong>\n    </p>\n    {controls.map((ctrl) => (\n      <BuildControl\n        key={ctrl.label}\n        label={ctrl.label}\n        added={() => props.ingredientAdded(ctrl.type)}\n        removed={() => props.ingredientRemoved(ctrl.type)}\n        disabled={props.disabled[ctrl.type]}\n      />\n    ))}\n    <button\n      className={classes.OrderButton}\n      disabled={!props.purchasable}\n      onClick={props.ordered}\n    >\n      ORDER NOW\n    </button>\n  </div>\n);\nexport default buildControls;\n","import React, { Component } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport Backdrop from \"../Backdrop/Backdrop\";\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n  componentDidUpdate() {\n    console.log(\"[Modal] did update\");\n  }\n  render() {\n    return (\n      <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />{\" \"}\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\",\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\nconst button = (props) => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\n    onClick={props.clicked}\n  >\n    {props.children}\n  </button>\n);\nexport default button;\n","import React, { Component } from \"react\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport Button from \"../../UI/Button/Button\";\nclass OrderSummary extends Component {\n  componentDidUpdate() {\n    console.log(\"[Ordersummary] did update\");\n  }\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(\n      (igKey) => {\n        return (\n          <li>\n            <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:\n            {this.props.ingredients[igKey]}\n          </li>\n        );\n      }\n    );\n    return (\n      <Aux>\n        <h3>Your Order</h3>\n        <p>Delicious burger with following ingredients</p>\n        <ul>{ingredientSummary}</ul>\n        <p>\n          <strong>Total Price:{this.props.price.toFixed(2)}</strong>\n        </p>\n        <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>\n          Continue\n        </Button>\n      </Aux>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"https://react-my-burger-ff590.firebaseio.com/\",\n});\nexport default instance;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\nexport default spinner;\n","import React, { Component } from \"react\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../Aux/Aux\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null,\n    };\n\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n        }\n      );\n    }\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../hoc/axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nconst INGREDIENT_PRICES = {\n  salad: 5,\n  cheese: 10,\n  meat: 20,\n  bacon: 10,\n};\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: null,\n    totalPrice: 25,\n    purchasable: false,\n    purchasing: false,\n    loading: false,\n    error: false,\n  };\n  componentDidMount() {\n    axios\n      .get(\"https://react-my-burger-ff590.firebaseio.com/ingredients.json\")\n      .then((response) => {\n        this.setState({ ingredients: response.data });\n      })\n      .catch((error) => {\n        this.setState({ error: true });\n      });\n  }\n  updatePurchaseState(ingredients) {\n    // const ingredients = {\n    //   ...this.state.ingredients,\n    // };\n    const sum = Object.keys(ingredients)\n      .map((igKey) => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    this.setState({ purchasable: sum > 0 });\n  }\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceDeduction = INGREDIENT_PRICES[type];\n\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceDeduction;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n  purchaseContinueHandler = () => {\n    console.log(this.props);\n\n    const queryParams = [];\n    for (let i in this.state.ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) +\n          \"=\" +\n          encodeURIComponent(this.state.ingredients[i])\n      );\n    }\n    queryParams.push(\"price=\" + this.state.totalPrice);\n    const queryString = queryParams.join(\"&\");\n    this.props.history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryString,\n    });\n  };\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients,\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.state.error ? (\n      <p>Either Connect to Internet or There are no Ingredient to Show!</p>\n    ) : (\n      <Spinner />\n    );\n    if (this.state.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.state.ingredients} />\n          <BuildControls\n            ingredientAdded={this.addIngredientHandler}\n            ingredientRemoved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            ordered={this.purchaseHandler}\n            purchasable={this.state.purchasable}\n            price={this.state.totalPrice}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.state.ingredients}\n          price={this.state.totalPrice}\n          purchaseCanceled={this.purchaseCancelHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n        />\n      );\n    }\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\nexport default withErrorHandler(BurgerBuilder, axios);\n","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\nimport classes from \"./CheckoutSummary.module.css\";\nimport Aux from \"../../../hoc/Aux/Aux\";\n\nconst checkoutSummary = (props) => {\n  return (\n    <Aux>\n      <div className={classes.CheckoutSummary}>\n        <h1>We hope you love Burger , as much we love you!</h1>\n        <div style={{ width: \"100%\", margin: \"auto\" }}></div>\n        <Burger ingredients={props.ingredients} />\n\n        <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n          CANCEL\n        </Button>\n        <Button btnType=\"Success\" clicked={props.checkoutContinued}>\n          Continue\n        </Button>\n      </div>\n    </Aux>\n  );\n};\nexport default checkoutSummary;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\nconst input = (props) => {\n  let inputElement = null;\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={classes.InputElement}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={classes.InputElement}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={classes.InputElement}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={classes.InputElement}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\nexport default input;\n","import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactData.module.css\";\nimport axios from \"../../../hoc/axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Good name\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n        },\n        isValid: false,\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Ta-da !street\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n        },\n        isValid: false,\n      },\n      zipcode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Blah-Blah Zipcode\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n        },\n        isValid: false,\n        minLength: 4,\n        maxLength: 7,\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Bingo - Country\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n        },\n        isValid: false,\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Reachable E-mail\",\n        },\n        value: \"\",\n        validation: {\n          required: true,\n        },\n        isValid: false,\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"fastest\", displayValue: \"Fastest\" },\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\n          ],\n          placeholder: \"Select any one mode\",\n        },\n        value: \"\",\n      },\n    },\n    loading: false,\n  };\n\n  orderHandler = (event) => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[\n        formElementIdentifier\n      ].value;\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n      orderData: formData,\n    };\n    axios\n      .post(\"/orders.json\", order)\n      .then((res) => {\n        this.setState({ loading: false });\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n      });\n  };\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (rules.required) {\n      isValid = value.trim() !== \" \" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, inputIdentifier) => {\n    event.preventDefault();\n    const updatedOrderForm = {\n      ...this.state.orderForm,\n    };\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    console.log(updatedFormElement);\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n    this.setState({ orderForm: updatedOrderForm });\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key],\n      });\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map((formElement) => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            changed={(event) => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"Success\">Order</Button>\n      </form>\n    );\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter Your Contacting Details</h4>\n        {form}\n      </div>\n    );\n  }\n}\nexport default ContactData;\n","import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport { Route } from \"react-router-dom\";\nimport ContactData from \"../Checkout/ContactData/ContactData\";\n\nclass Checkout extends Component {\n  state = {\n    ingredients: null,\n    price: 0,\n  };\n  componentWillMount() {\n    const query = new URLSearchParams(this.props.location.search);\n    const ingredients = {};\n    let price = 0;\n    for (let param of query.entries()) {\n      // ['salad', '1']\n      if (param[0] === \"price\") {\n        price = param[1];\n      } else {\n        ingredients[param[0]] = +param[1];\n      }\n    }\n    this.setState({ ingredients: ingredients, totalPrice: price });\n  }\n  CheckoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n  CheckoutContinuedHandler = () => {\n    this.props.history.replace(\"./checkout/contact-data\");\n  };\n  render() {\n    return (\n      <div>\n        <CheckoutSummary\n          ingredients={this.state.ingredients}\n          checkoutCancelled={this.CheckoutCancelledHandler}\n          checkoutContinued={this.CheckoutContinuedHandler}\n        />\n        <Route\n          path={this.props.match.path + \"/contact-data\"}\n          render={(props) => (\n            <ContactData\n              ingredients={this.state.ingredients}\n              price={this.state.totalPrice}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\nexport default Checkout;\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst order = (props) => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      quantity: props.ingredients[ingredientName],\n    });\n  }\n\n  const ingredientOutput = ingredients.map((ig) => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"7px\",\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.quantity})\n      </span>\n    );\n  });\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients : {ingredientOutput}</p>\n\n      <p>\n        Price: <strong>Rs.{props.price}</strong>\n      </p>\n    </div>\n  );\n};\nexport default order;\n","import React, { Component } from \"react\";\nimport axios from \"../../hoc/axios-orders\";\nimport Order from \"../../components/Order/Order\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n  state = {\n    orders: [],\n    loading: true,\n  };\n  componentDidMount() {\n    axios\n      .get(\"./orders.json\")\n      .then((res) => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key,\n          });\n        }\n        this.setState({ loading: false, orders: fetchedOrders });\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n      });\n  }\n  render() {\n    return (\n      <div>\n        {this.state.orders.map((order) => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\nexport default withErrorHandler(Orders, axios);\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport Orders from \"./containers/Orders/Orders\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}